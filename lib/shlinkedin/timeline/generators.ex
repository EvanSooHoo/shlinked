defmodule Shlinkedin.Timeline.Generators do
  def adversity() do
    surprising_aggressor = surprising_aggressor()

    """
    Storytime... When I was #{young_identifier()}, I lived #{poor_condition()}. We had to #{survival_requirement()} to survive — I once #{weird_brutal_action()}. #{question_quote()}

    Well, something even worse happened to me. One day, when I was #{blatantly_self_aggrandizing_charitable_action()}, a #{surprising_aggressor} managed to #{crime()}. I was left extremely #{adjective()}.

    But I didn’t whine, or complain. I didn’t even #{reasonable_response()}.

    Instead, I figured this would be a good chance to ask #{surprising_aggressor} #{business_question()}

    That’s when I learned to #{modern_business_practice()}. When you are faced with #adversity, you need to #{stupid_response()}. It’s the only way to learn. Thanks to my challenges, and my willingness to power through them, I am now #{present_title()}. You can do the same, too. You just have to believe. Thank you.

    #{hashtags()}.

    """
  end

  def job() do
    """
    Hi #{group_of_people()},

    I'm thrilled to announce I am now #{present_title()}.

    I could never imagine accepting such an amazing position.

    #{hashtags()}
    """
  end

  def business_challenge() do
    """
    Are you tired of living #{poor_condition()}? Well, I’ve been where you are today — and you’re in luck.

    I’ve decided to take a break from #{blatantly_self_aggrandizing_charitable_action()} to offer a #BusinessChallenge: If you can somehow manage to #{crime()},
    then I’ll give you access to my entire collection of email addresses—no questions asked.

    And, here’s one piece of advice: when you approach a new #BusinessChallenge, try to #{stupid_response()}.
    """
  end

  def strange_observation() do
    """
    Huh. I just #{weird_brutal_action()}.
    """
  end

  def guilt_trip() do
    """
    If you're not #{blatantly_self_aggrandizing_charitable_action()}, you should be ashamed of yourself.
    """
  end

  def nft() do
    ["~#{adjective()}~", "*#{adjective()}*", "#{adjective()}."]
    |> Enum.random()
    |> String.capitalize()
  end

  def young_identifier() do
    [
      "but a wee lad",
      "a little baby",
      "84",
      "5",
      "12",
      "2",
      "a spritely young lad",
      "a playful, innocent little shoe shine",
      "pretty young thing",
      "Pretty kitty",
      "CEO of being a baby",
      "a young man",
      "blossoming youth",
      "a young woman",
      "an itty bitty lil kid",
      "a boy two weeks ago",
      "a wee lass",
      "so so small",
      "tiny",
      "5 and three quarters",
      "so small that my legs didn’t touch the ground when I sat on a chair",
      "so young that I didn’t even know what business meant",
      "young and reckless",
      "young and beautiful",
      "young and useless"
    ]
    |> Enum.random()
  end

  @doc """
  Returns a survival requirement for template generator
  """
  def survival_requirement() do
    [
      "fight",
      "eat the weak",
      "eat soil and tin can lids",
      "dig a big, big hole",
      "sell grandpappy's dentures",
      "move into uncle Shlem's house",
      "plug our ears and close our eyes",
      "sell all our cousins' kidneys",
      "squeeze our tippy toes and fingers together",
      "bend our legs backwards like aliens",
      "infiltrate a wild pack of puppy dogs",
      "trick our friends",
      "poke our belly buttons 3 times",
      "split up",
      "wiggle around in a tiny circle"
    ]
    |> Enum.random()
  end

  @doc """
  Returns a random poor condition for template generator
  """
  def poor_condition() do
    [
      "in a shoe",
      "under a bridge",
      "in your basement",
      "in Northern Yorkshire, where the beer is warm and nights are cold",
      "in a dirt pit on the side of the road",
      "in an abandoned nuclear waste factory",
      "on the side of the road",
      "in a haunted house",
      "in a decrepit neo-modernist mansion barely worth $3.2 million",
      "by a Dairy Queen in Secaucus, NJ",
      "under a giant turtle",
      "in a pineapple under the sea",
      "in a dumpster by Dave & Busters",
      "next to a tire fire",
      "to dream",
      "in Transylvania",
      "in New York City, but the seedy part from crime movies",
      "underwater",
      "in a swamp",
      "in a really small yacht",
      "at a prep school, where I was all-state in lacrosse",
      "under a staircase at my aunt and uncle’s place",
      "in a garbage can",
      "in the back of a moving van, just jetting from place to place",
      "right behind you",
      "in a Planet Fitness",
      "in Italy, but not the Italy you know with spaghetti and pesto as far as the eye can see. This was the mean Italy, with rigatoni and puttanesca everywhere",
      "in a beat-up tin shack",
      "in an alleyway",
      "in a blanket fort on the beach"
    ]
    |> Enum.random()
  end

  def weird_brutal_action() do
    [
      "saw two pigeons fighting over a human finger",
      "saw three pigeons fighting over a human finger",
      "saw seven salesman eat a briefcase for fun",
      "saw a megalodon shark",
      "saw a man transform into a bird and peck someone’s head really hard",
      "saw Two women braiding hair for money in a van",
      "saw Seven prep school students descend on a referee after a poor call in their lacrosse game and eat him",
      "saw two Nicolas Cage movies in one night",
      "saw an ad for ‘plastic’ and I’m still not sure what that meant",
      "saw three goblin tribes warring over an Orichalcum mine",
      "saw a CEO’s tie get stolen while he was wearing it",
      "saw a former pro-wrestler fight a parked car and win",
      "saw a grizzly bear selling salacious acts for salmon",
      "saw a salmon selling salacious acts for protection from bears",
      "saw an old man claiming to be a wizard rob a convenience store with his wand",
      "saw an old man claiming to be a wizard rob a convenience store with his “wand.”",
      "had to make my spreadsheets on a greasy old Arby’s bag",
      "had to file my taxes with my accountant (my accountant was a rabid possum)",
      "Trained a lizard to teach me algebra because my school was overrun with moths",
      "had to chug ten soylents just to get into ZBT",
      "had to tickle my way through an EDM festival just to get to the grocery store",
      "robbed a freight train like a cowboy just to get some socks",
      "captured two rabbits and wore them like ear muffs just to survive the winter",
      "saw a ghost begging for spare ectoplasm by the subway",
      "brokered a trade between two salamanders and only got a 2% cut",
      "shaved a man’s back for some bread",
      "had to take a town car to the airport because there were no ubers available",
      "had to take the subway",
      "had to eat one of those cinnamon buns that come pre-wrapped at the store",
      "had to eat “Canned Soup.”",
      "wrestled an octopus because the warlord said to",
      "smashed a jack-o-lantern just to get to that sweet, sweet orange goop",
      "fought to survive",
      "entered data for 3 hours straight just so we could get that slide deck out",
      "got a mere 5 hours of sleep because I had an espresso after dinner",
      "had to pickup my seamless order in person because of an issue with their app",
      "ate fast food",
      "had to get vaccinated for something called ‘possum madness’",
      "perform a private musical number for a sheik just for some food"
    ]
    |> Enum.random()
  end

  def question_quote() do
    [
      "“How do you manage to be so handsome with such an intense past,” you mumble?",
      "“Wow wow wow! But why tell me?”",
      "“Uhm… okay?” you wonder.",
      "“Oh my goodness! How do you know so much wisdom?” You may cry!",
      "“I don’t possibly see how this is relevant to anything!” You exclaim!",
      "So, you think I’m crazy…",
      "Ah, you must think I’m a jester, having a great big lark in the courtyard of the king.",
      "I’m sure you’re a bit confused. Anyway..",
      "Hah—I must sound like a rambler for the ages. So..",
      "“There’s no way this can have a business-related takeaway,” you say?",
      "Hah! Crazy times…. Anyhoo! ",
      "Ah, memories… So",
      "Look at me! Rambling like an old drunk! So…"
    ]
    |> Enum.random()
  end

  def blatantly_self_aggrandizing_charitable_action() do
    [
      "preparing soup for the homeless after my shift at the neurosurgery factory as a doctor",
      "massaging our brave veterans",
      "teaching orphans how to create a pivot table in Excel",
      "teaching amputee puppies how to sing",
      "carrying old people across the street",
      "dancing with the stars",
      "teaching a young Elon Musk about science",
      "sharing my cool idea for a personal computation device with my friend young Bill Gates",
      "when I was showing Jimi Hendrix some cool guitar licks he could use (one became “Purple Haze”)",
      "building fresh water wells for underserved villages in southern New Jersey",
      "planting trees in the Sahara",
      "prepared morning coffee for my sickly interns",
      "donating a million dollars (that I could barely afford) to hospitals",
      "repainting hospitals for charity",
      "donating my organs to charity",
      "inventing the internet",
      "tutoring veterans",
      "alphabetizing our brave veterans",
      "revitalizing my local infrastructure through the power of marketing",
      "doing “private” stuff",
      "teaching Jeff Bezos how to read",
      "helping small business learn how to better use Salesforce",
      "inventing penicillin ",
      "teaching entrepreneurs how to network",
      "teaching entrepreneurship to networkers",
      "juggling to entertain orphan veterans",
      "wearing a sailor’s outfit and dancing for Navymen",
      "teaching amputees about diversity",
      "repainting my local church",
      "supporting my local business",
      "eating at a local hot spot",
      "getting my 4th vaccine",
      "pondering my philosophy books",
      "admiring my library of classic literature",
      "telling everyone that they are beautiful no matter what shape their head is"
    ]
    |> Enum.random()
  end

  def surprising_aggressor() do
    [
      "a nun",
      "a raccoon ",
      "a middle schooler",
      "a girl scout",
      "a boy scout",
      "a rabid bird of some kind",
      "a snotty little fellow by the name of ‘Davey’",
      "a stinky rat",
      "a WeWork development intern",
      "a youth pastor",
      "a very small boy",
      "a mysterious nomad",
      "a wandering minstrel ",
      "a savvy IT guy",
      "a wise old dancer",
      "a streetsmart pickpocket",
      "a prostitute with a heart of gold",
      "a tiny dancer",
      "a very large dancer",
      "a Navyman",
      "a reputable local jacuzzi salesman",
      "an impish bridge troll",
      "a horde of small mangrove crabs",
      "an oilman ",
      "three small children in a trenchcoat",
      "two tricky garbage foxes ",
      "a man with teeny tiny hands",
      "a dental hygienist ",
      "a dentist",
      "a doctor",
      "my friend, Zander",
      "my friend, Grolf",
      "my friend, Marcus",
      "Billie Eilish’s manager",
      "Mr. Potatohead from the beloved Toy Story franchise",
      "a CEO",
      "a CFO",
      "a CMO",
      "a horde of ravenous digital marketers",
      "two recently engaged lovebirds",
      "a kind old man",
      "two old drunkards",
      "a 35 year old suburban mom consumed by a white wine rage",
      "ny state representative",
      "ny local congressperson",
      "a struggling actor",
      "a pack of wild interns",
      "HR",
      "a toaster that was made conscious by a kind wizard’s spell",
      "a hard-boiled private detective"
    ]
    |> Enum.random()
  end

  def crime() do
    [
      "Jack my shit",
      "Shank me good",
      "Creep up on me and slapped the back of my head",
      "Copy my social media post and posted it without crediting me",
      "Invite me to 10 meetings in a single week",
      "Seize my arm and verbally berated me for hours",
      "Steal all of my fresh produce and grain",
      "Drop kick me into a wall",
      "Tickle me senseless",
      "Unqualify all my leads",
      "Drop all my tables",
      "Deoptimize every single funnel I had",
      "Completely hack me",
      "Steal my new billfold",
      "Demolish me in every imaginable way",
      "Commit a string of arsons across the country",
      "Challenge all my beliefs",
      "Evade all my taxes for me",
      "Smother me in my sleep",
      "Lock me up",
      "Register me as an accredited 501(c)3",
      "Convert me to the episcopalian church",
      "Shanghai me on his ship",
      "Sacrificed me so that they may enjoy a bountiful harvest come spring",
      "Reported me",
      "Undermine my leadership",
      "Managed to successfully vote me of the board of directors",
      "Managed to defeat me in a proxy battle",
      "Fill my pockets with coleslaw",
      "Debrief me by removing my briefs",
      "Karate chop my solar plexus",
      "Steal my teeth",
      "Bungle all my job interviews for the last 6 years",
      "Floss my teeth but in a really poor fashion",
      "Drop a piano on my head",
      "Attack me with a piece of rusty old rebar",
      "Chop off my head",
      "Chop off my whole body",
      "Set me on fire—metaphorically and literally",
      "Crunch all my fingers in their mouth",
      "Pierce me with their pointy teeth",
      "Give me rabies with a single bite",
      "Douse me in toxic mystery liquids"
    ]
    |> Enum.random()
    |> String.downcase()
  end

  def adjective() do
    [
      "Thirsty",
      "Confused",
      "goopy",
      "Sweaty",
      "Upset",
      "Unhappy",
      "Out of sorts",
      "Demoralized",
      "Ashamed",
      "Troubled",
      "Impoverished",
      "Tired",
      "Sleepy",
      "Disquieted",
      "Disturbed",
      "Distressed",
      "Stressed",
      "Exhausted",
      "Covered in metaphorical spikes",
      "Lumpy and aggressive",
      "Angry",
      "Bewildered",
      "Unoptimized",
      "Mismanaged",
      "Corpulent",
      "Boring",
      "vapid",
      "Clingy",
      "Covered in a metaphorical soup of my own design",
      "Frustrated with the tangled webs that we weave",
      "Greasy",
      "Damp",
      "Ticklish "
    ]
    |> Enum.random()
    |> String.downcase()
  end

  def reasonable_response() do
    [
      "go to the hospital",
      "ask anyone for help",
      "clean myself off",
      "bandage up my wounds",
      "cry except a little",
      "shriek with terror",
      "call the authorities for assistance",
      "try to stop the whole ordeal",
      "clean up afterwards",
      "stop working",
      "cry",
      "post about it on social media as a desperate bid for attention, and with the hopes that some turbulent experience will grant me clout as a “thought leader.” Not even once",
      "eat my vegetables",
      "retaliate",
      "kick ‘em in the face for revenge",
      "stop spreadsheeting while it happened",
      "pause checking my email while it happened",
      "ask my pediatrician for help",
      "keel over in agony like a lesser human would",
      "look up at the cloudy skies and cry out, “Why, God? Why hast thou forsaken me?”",
      "fight back. Though I could have—you see, I’m a black belt in Krav Maga and in my spare time I teach it to children who don’t have teeth for free. Krav Maga isn’t about attacking, it’s about self-defense. But sometimes, self-defense is about attacking, so naturally, I didn’t fight back like I said earlier. I definitely know Krav Maga please stop asking for demonstrations I can’t right now because I'm BUSY"
    ]
    |> Enum.random()
  end

  def business_question() do
    [
      "“How do you reach new prospects?”",
      "“What is your product’s main value prop?”",
      "“How do you engage your employees?”",
      "“What are your core brand values?”",
      "“How do have you maintained a healthy funnel?”",
      "“Do you have well-managed revenue streams?”",
      "“Your Workforce—are they optimized?”",
      "“Have you employed any digital solutions to improve your labor allocation? I’d love to chat for ten minutes.”",
      "“Do you ever have trouble with your subordinates talking out of turn during meetings?”",
      "“Will you let me tickle your revenue streams? I can promise major growth.”",
      "“When was the last time you were hugged?”",
      "“How tall are you?”",
      "“How blue is the sky? It is as blue as your business is filled with potential, but serious flaws in brand identity.”",
      "“Sure, you may be able to defeat me—but can you defeat your own business challenges?”",
      "“Who is your Chief Revenue Officer? Has your C-Suite been fully integrated with the cloud?”",
      "“Where is the cloud?”",
      "“Do you have actionable insights to make data-driven decisions?”",
      "“Are you tired of manual processes slowing down your sales process?”"
    ]
    |> Enum.random()
  end

  def modern_business_practice() do
    [
      "Update my compliance documents",
      "File with the SEC",
      "Optimize workflows",
      "Build a small business",
      "Increase inbound leads by 10x",
      "Decrease revenue leakage by 50%",
      "Intimidate pigeons so that they will be my interns",
      "Network. ",
      "Intimidate my peers",
      "Make interns cry",
      "Go to the bathroom all by myself",
      "Be a big business boss",
      "Swim",
      "Collate my rolodex",
      "Take a business spanking and turn it into revenue",
      "Marketing",
      "Be a thought leader",
      "Make my dreams into realities by dreaming of very, very small and attainable goals—like working at a certain company that makes software",
      "Clip not just my nails, but the nails of every client and prospect nearby",
      "Sleep upside down like a bat",
      "Tie my shoes (metaphorically)",
      "Challenge my peers to become better workers. To dare them into greatness. To show them that marketing isn’t just about selling a product—it’s also about upselling additional features to existing clients",
      "Make a go-to market plan",
      "Standardize internal messaging practices so everyone talks good at eachother for the company make good work ok",
      "Be a lawyer",
      "Braid hair",
      "Make pickles at home really easily",
      "Cook",
      "Sing",
      "Dance",
      "Dance the dance of business",
      "Scale a business internationally",
      "Motivate my engineering team with branded webcam covers. ",
      "Offset the mental effects of frequent 60 hour work weeks by offering employees free access to an app where a white guy talks to you about meditation for 30 minutes"
    ]
    |> Enum.random()
    |> String.downcase()
  end

  def stupid_response() do
    [
      "look inward, and outward, simultaneously",
      "to spit in the eyes of god",
      "melt",
      "milk your business hows until you have enough business calcium",
      "tie up your boots and get to work",
      "be strong",
      "be courageous and bold and brave",
      "slap that adversity in the face and say “not today, scum. I’m a businessperson and I’m tough.”",
      "diversity",
      "make that adversity into strength",
      "use your cunning to outsmart it",
      "redirect its negative energies using your extensive Krav Maga training",
      "curl up into a ball and play dead",
      "immediately defecate in your own pants and make yourself appear as tall as possible by holding your hands up straight. That ought to scare it off",
      "clap loudly and yell “AHHHHHH” for as long as possible",
      "stay positive. We’ve all been there, and you will get through this adversity. It’s as simple as staying positive. We’ve all been there, and you will get through this adversity as long as you stay positive and remember, we’ve all been there",
      "clench your jaw and really just push it out",
      "shave your chest and wrestle",
      "oil up and slide around in the grand halls of business. That’ll make it tougher for the adversity to actually catch you and hold on",
      "smile more",
      "think happy thoughts",
      "overcome it",
      "lasso it and hogtie it",
      "throw a saddle on that bad boy and BAM—giddy up adversity! All aboard the adversity express!",
      "move to Brooklyn probably. And talk about how nice it is having trees on your street. And say “it’s so peaceful” a lot"
    ]
    |> Enum.random()
  end

  def present_title() do
    [
      "Assistant Manager at the Arby’s off I-95",
      "a juice artist at a Jamba Juice",
      "CEO of Apple",
      "one of Forbes’ 10,000 under 10,000",
      "a brand invigorator. A storyteller. A single mother. A veteran. And above all else, a marketer",
      "an Entrepreneur with over 7 business ideas to my name",
      "some sort of demi-god",
      "severely in debt",
      "paying off student loans for the foreseeable future",
      "in debt",
      "suffering from minor tinnitus",
      "thrilled to announce that I’ll be joining Doyle, Fulham, and Westerberg LLC as a junior associate",
      "tired all the time",
      "a junior copywriter and i get to write for brands that I know! That’s fun and makes it cool! You know Charmin toilet paper? I’ve written two of their Tweets. ",
      "lost in the Google basement, please send help. It’s very dark and people keep offering me two massages per quarter",
      "living under a bridge in San Francisco",
      "the proud owner of two separate Instagram accounts",
      "helping business owners achieve their goals",
      "Head Coder at codetech.io",
      "a Train Engineer",
      "a DJ",
      "a podcaster",
      "CEO of my own company that I invented",
      "Jamba Juice. Forever. Jamba Juice is eternal. It will witness the death of the wind, the mountains as they retreat into the seas",
      "a member of the AMA Marketing Hall of Fame",
      "a proud viewer of every Super Bowl ad",
      "a vegan",
      "a vegetarian",
      "a pescetarian",
      "exclusively carnivorous—like Joe Rogan, my hero",
      "on an exclusive deal with Clubhouse where I go on there and talk for awhile",
      "a doctor",
      "an Oil Baron",
      "a Rollercoaster Tycoon",
      "Warren Buffet",
      "Richard Branson’s right-hand man",
      "Elon Musk and Grimes’ baby",
      "named Kevin",
      "significantly taller than I was as a child"
    ]
    |> Enum.random()
  end

  def hashtags() do
    [
      "#Adversity #Diversity #University",
      "#Blessed ",
      "#AccentureGlobal",
      "#NASDAQ",
      "#OracleTop100",
      "#MarketingHacks #MarketingWizard #WhizzingOnMarketers",
      "#GrundlePlay",
      "#Bonds #Debt #SalesManagement #BDSM",
      "#ThoughtLeadership #BusinessHacks #ConsensualChoking",
      "#KPI #WAP",
      "#TeachYourChildren #LessonsForLife #JamOutWithJamba",
      "#JambaForever",
      "#Business #DairyFree",
      "#LikeForLike",
      "#LickForLick",
      "#VenmoMe",
      "#Hashtag",
      "#AgeismInTheWorkplace",
      "#MillenialTrends #GenZ #Lit ",
      "#VeganRecipes #ChickpeaFlour",
      "#StopTheCount",
      "#ConstitutionalRights #RightToBareArms",
      "#BigStrongFiremen",
      "#GreasedUpAndReadyToGo",
      "#NoMorePediatricians",
      "#5G #Unsafe #KillsBirds",
      "#Vaccines #DontTrustThem",
      "#DoYourResearch",
      "#Patriot #RedWhiteBlue",
      "#PleaseHelpMe",
      "#Grinding #HaveNotSeenKidsInThreeMonths",
      "#Grinding #TwoBusinesspeopleGrinding",
      "#FreeMoney #MLM #Ponzi",
      "#GreedIsGood",
      "#NFT #Crypto #Blockchain",
      "#Sustainability #GoGreen #Reduce #Reuse #Recycle #ReststopBathroom #5Minutes #MeetMeThere",
      "#Brave #IAmBrave #Bravery #Courage",
      "#SpicyTakes #Memes",
      "#TacoBell"
    ]
    |> Enum.random()
  end

  def group_of_people() do
    [
      "everyone",
      "sheeple",
      "ding-dongs",
      "coworkers",
      "colleagues",
      "friends",
      "people",
      "friend-o's",
      "my fellow grown-ups"
    ]
    |> Enum.random()
  end

  def full_name() do
    "#{first_name()} #{middle_name()} #{last_name()}"
  end

  defp first_name() do
    [
      "Mr.",
      "Professor",
      "D’Antanthony",
      "Mrs.",
      "Ms.",
      "Mistress",
      "Fancy",
      "Michael",
      "Tim",
      "Boris",
      "Jennifer",
      "Jen",
      "Marcy",
      "Ringo",
      "Tiny",
      "Marvelous",
      "Darcy",
      "Clancy",
      "Yancy",
      "Sir",
      "Lady",
      "Rachel",
      "Carolyn",
      "Janet",
      "Jack",
      "Samantha",
      "Catherine",
      "Kathy",
      "Sergeant",
      "Angela",
      "Anna",
      "Amy",
      "Cynthia",
      "Margaret",
      "Deb",
      "Brenda",
      "Amanda",
      "Michelle",
      "Kim",
      "Ashley",
      "Ash",
      "Lisa",
      "Betty",
      "Sarah",
      "Yasmin",
      "Patricia",
      "Esme",
      "Esmerelda",
      "Gorbon",
      "Beelzebub",
      "Gorlax",
      "Xantrax",
      "Fluffy",
      "Bingus",
      "Bungus",
      "Quontor",
      "Gragnar",
      "Liam",
      "Noah",
      "Oliver",
      "William",
      "Elijah",
      "James",
      "Ben",
      "Jim",
      "Lucas",
      "Luke",
      "Mason",
      "Ethan",
      "Alexander",
      "Henry",
      "Jacob",
      "Michael",
      "Daniel",
      "Logan",
      "Dan",
      "Sebastian",
      "Jack",
      "Aiden",
      "Jeff",
      "Geoff",
      "Georff",
      "Jerff",
      "Sam",
      "Matt",
      "Joe",
      "Jo Jo",
      "Levi",
      "Mateo",
      "Yumi",
      "Wyatt",
      "Carter",
      "Jules",
      "Grayson",
      "Gabe",
      "Anthony",
      "Dylan",
      "Lincoln",
      "Abe",
      "Joshua",
      "Yeshua",
      "Itzak",
      "Vladislav",
      "Artyom",
      "Christian",
      "Connor",
      "Cam",
      "Hunter",
      "Zeke",
      "Gargantuanoid",
      "Borlok",
      "Aragorn",
      "Elon",
      "Bill",
      "Sam",
      "Charlie",
      "Hot",
      "Heated",
      "Compostable",
      "Garbage",
      "Treebeard",
      "Bork",
      "Doge",
      "Xantham",
      "Disco",
      "The Inimitable",
      "Da’Coldest",
      "Extistentialo",
      "Tangelope",
      "Creamy",
      "Juniper",
      "Rosemary",
      "Thyme",
      "Basil",
      "Organic",
      "Soupy",
      "Je.",
      "R.L.",
      "J.K.",
      "F.",
      "Monsanto",
      "Osmosis",
      "Furlo",
      "Stinky",
      "Prant",
      "Gurby",
      "Rajeet",
      "Spanky",
      "Horbo",
      "Bain",
      "Spindle",
      "Santa",
      "Zeus",
      "Poseidon",
      "Thor",
      "Loki",
      "Odin",
      "The Eternal",
      "Doom",
      "Dark Lord",
      "Darth",
      "His Holiness",
      "Her Holiness",
      "Their Holiness",
      "Mystical",
      "Grimbledore",
      "Hermione",
      "Aragorn",
      "Yuzu",
      "Chicken",
      "Beanie",
      "Filton",
      "Stilton",
      "Bleu",
      "Racecar",
      "Joey",
      "Greasetrap",
      "Bojack",
      "Daddy",
      "Chief",
      "Zaddy",
      "Salamander",
      "Zanzilore",
      "Cornelius",
      "Gobbler",
      "Cornwall",
      "Prince",
      "King",
      "Queen",
      "Duke",
      "Duchess",
      "Cardinal",
      "Pope",
      "Warlord",
      "Commander",
      "SlooSloo",
      "Fern",
      "Orchid",
      "Daisy",
      "Daffodil",
      "Weed",
      "Ketamine",
      "Kate",
      "Alice",
      "James",
      "David",
      "Sweet",
      "Jamba",
      "Beastmaster",
      "Edward"
    ]
    |> Enum.random()
  end

  defp middle_name() do
    [
      "A.",
      "P.",
      "D.",
      "F.",
      "E.",
      "W.",
      "R.",
      "Q.",
      "B.",
      "M.",
      "L.",
      "Dee",
      "Edward James Olmos",
      "Jamba",
      "Bert",
      "Frances",
      "Clunk",
      "Spacelord",
      "Jeff",
      "Geoff",
      "Jerff",
      "Georff",
      "“Bluntz”",
      "“Two Chains”",
      "“The Richard Branson of Northeast Pennsylvania”",
      "“Big Toes”",
      "“Little Nips”",
      "“Belly Button”",
      "Lint",
      "Flint",
      "Dancer",
      "Optimize.ly",
      "Babydoll",
      "Disco",
      "Zap",
      "Chet",
      "Rose",
      "Rosalinda",
      "Batman",
      "Funkalot",
      "Soup",
      "Squirrely",
      "Frog",
      "Toad",
      "Donkey Dad",
      "Door",
      "Slime",
      "Jam",
      "Jamb",
      "“Pepperoni Tony”",
      "Bug",
      "Please help I am locked in the ShlinkedIn server room and they just keep sliding pita bread under the door when I ask for help",
      "Ouchie-Youchi",
      "Ace",
      "Stud",
      "Thick",
      "Thicc",
      "Wort",
      "Qwerty",
      "Onetwo-Threefour",
      "Fintech",
      "Economy",
      "“The Poet”",
      "Optimizer",
      "“Funnel Enhancer”",
      "Destroyer",
      "Vlinkus",
      "Pious",
      "Gregoire",
      "Francois",
      "Yarrrr",
      "Arrrr",
      "Blarrr",
      "Neopits",
      "Club Penguin",
      "Evangelizer"
    ]
    |> Enum.random()
  end

  def profile_photo() do
    id = Enum.random(1..99)
    gender = Enum.random(["men", "women"])
    "https://randomuser.me/api/portraits/#{gender}/#{id}.jpg"
  end

  def last_name() do
    [
      "Mine",
      "Juice",
      "Clause",
      "Barley",
      "“Two Shoes”",
      "CEO",
      "“The Magician”",
      "Skywalker",
      "Varder",
      "Vader",
      "Larder",
      "Crumby",
      "Jones",
      "Davidson",
      "Greenblatt",
      "Crombly-Wallace",
      "Blackbeard",
      "Greybeard",
      "Rainbowbeard",
      "The Destroyer",
      "The Crumbler",
      "The Dancer",
      "Son of Musk",
      "Smith",
      "Mirza",
      "Chen",
      "Cohen",
      "Kuang",
      "Maisel",
      "Branson",
      "Musk",
      "Bezos",
      "Gates",
      "Ma",
      "Pa",
      "Be-Nimble",
      "Peenumble",
      "Brickle",
      "Ticklewitz",
      "Souplord",
      "CPA",
      "Dentist-at-Law",
      "Attorney-at-Law",
      "Esq.",
      "Squiggly",
      "Bill",
      "Hickok",
      "Claus",
      "Linklater",
      "The Engineer",
      "The Endless",
      "Doombringer",
      "Satanfinger",
      "Christ",
      "Chunder",
      "Pringle",
      "IV",
      "VI",
      "XIV",
      "XXIVIV",
      "Ketchum",
      "Putin",
      "Lennon",
      "Lennon-Lenin",
      "Beezos",
      "Glates",
      "Febrezeius",
      "Armand-Hammer",
      "Jambajuice",
      "Dogman",
      "Horseman",
      "Catperson",
      "McDonalds",
      "Burgerking",
      "Hotsauce",
      "Aquariasmus",
      "Erasmus",
      "Parker",
      "Burns",
      "Simpson",
      "Foxnews",
      "Bunion",
      "Apple",
      "Jobs",
      "Flatternitus",
      "Zizmor",
      "Godzilla",
      "Thabeatles",
      "Baincapital"
    ]
    |> Enum.random()
  end

  def slugify(str) do
    str
    |> String.downcase()
    |> String.replace(~r/[^\w-]+/u, "")
    |> String.slice(0..14)
  end

  # Resume Generator Stuff
  def street() do
    [
      "Periwinkle",
      "Babalab",
      "Road",
      "Avenue",
      "Coriander",
      "Lavender Leopard ",
      "Lane",
      "Gerpowitz",
      "Tata",
      "Prescott",
      "Ladd",
      "Oliphant",
      "Sizzurp",
      "Business",
      "Management",
      "Rolodex",
      "Office",
      "Business Complex",
      "One Two Three",
      "Candy Cane ",
      "Broaderway",
      "Real Street",
      "Small Rain Gutter ",
      "Underabridge",
      "Dumpster-Behind-Wendy’s",
      "Middelmanajament",
      "Alleyway",
      "Trenchcoat",
      "Stinkyboy",
      "Boat",
      "Jamba",
      "Enron",
      "Bezos",
      "Musk",
      "Shallow Progressive PR Stunt",
      "Casual Friday",
      "Sensible Pair of Slacks",
      "Breakroom",
      "Shallow Existence",
      "Capitalism",
      "UBI",
      "Hertz Enterprise",
      "Chamboltz",
      "Arrangement",
      "Benefit",
      "Smart",
      "Distribution",
      "Virtue",
      "Delivery",
      "Bee",
      "Appletree",
      "Cherry",
      "Abbey",
      "Wall Street",
      "Wall",
      "Park",
      "Champs-Élysée",
      "Royal Mile",
      "Hollywood",
      "Medium-Rare Steak",
      "Well-Done Steak",
      "Email",
      "Teams",
      "Slack",
      "Digital Infrastructure",
      "Digital Transformation",
      "eComm",
      "AWS ",
      "The Cloud",
      "Holly ",
      "Disco",
      "Hurpalurp",
      "Clamalam",
      "Grembo",
      "Grumbo",
      "Grimbo",
      "Florpus",
      "Wermple",
      "Runduldy-Dee",
      "Clurmps",
      "Blegh",
      "Vomit Noise",
      "Flart",
      "Batoot",
      "Patoot",
      "Zimpus",
      "Clundervale",
      "Thunderfist",
      "Chud",
      "Slurp",
      "CEO",
      "Businessman",
      "Tie"
    ]
    |> Enum.random()
  end

  def street_modifier() do
    [
      "Lane",
      "Ln.",
      "Avenue",
      "Ave.",
      "Boulevard",
      "Blvd.",
      "Street",
      "St.",
      "Alley",
      "Causeway",
      "Crossing",
      "Way",
      "Drive",
      "Dr.",
      "Terrace",
      "Place",
      "Pl.",
      "Court",
      "Ct.",
      "Plaza",
      "Plz.",
      "Square",
      "Sq."
    ]
    |> Enum.random()
  end

  def company_name() do
    [
      "MuskWorks",
      "Google",
      "ShlinkedIn",
      "GenericTechCo.ly",
      "Something something fintech",
      "Twitter",
      "Satan’s Personal Assistant",
      "Jamba Juice ",
      "Pret a Manger",
      "Bain Capital",
      "Oracle",
      "McKinsey",
      "Enron",
      "Wendy’s Parking Lot",
      "WalMart Bathroom",
      "Instagram (Personal Account)",
      "Audience Member at Saturday Night Live",
      "Public Pool",
      "WeWork",
      "Xerox",
      "Kodak",
      "Blockbuster",
      "Circuit City",
      "Yahoo",
      "Secret Government Lab",
      "The Carlyle Group",
      "Gartner",
      "A Tree",
      "Adult Toy Shop",
      "Toys ‘R Us",
      "Elon Musk’s Front Lawn",
      "Virgin (Not the company)",
      "Virgin",
      "I Make Slinkies Out of Household Materials",
      "Investment Firm",
      "Hedge Fund",
      "Marketing Agency",
      "Anthony’s #1 Business Consulting Firm in Secaucus New Jersey",
      "Tony Bologna’s Hoagies & Notary Public",
      "A FB Group for Sharing Political News",
      "Breitbart Comments Section",
      "The Pentagon",
      "The Louvre",
      "Art Gallery",
      "Madison Square Garden",
      "VagueCompany.name",
      "Startup.ly",
      "StarCorp",
      "Goldbaum Salami & Sales Software",
      "Mid-sized Music Venue",
      "Smith-Takametsu Co.",
      "Grumble",
      "Mama B’s Spicy Italian Soups & Co., LLC",
      "Batman",
      "Self-Funded Business Venture",
      "Accidental Escape Room",
      "The Mafia",
      "Yakuza",
      "Gang of British Pickpockets",
      "Landscaping Company",
      "Big ‘ol Bank",
      "CitiBank",
      "ShlinkedIn Central Bank",
      "Ancient Roman Army (Hail Caesar)",
      "Money Launderi—uh, I mean, Coin-Op Arcade.",
      "Cute Little Brunch Spot",
      "REAL HUMAN BUSINESS",
      "Hot Anthony’s Cold Pizza",
      "Meta",
      "Facebook",
      "UTI",
      "Slime Corp.",
      "Fox",
      "CNN",
      "Washington Post",
      "Vlerba.ly",
      "Gorp & Sons",
      "Razzl",
      "Shindig",
      "Clammi.ly",
      "ShellCorp",
      "BP",
      "Vampyr Health & Wellness",
      "In.Optimize",
      "Exclesior Tech & Soup",
      "Boeing",
      "Boing",
      "GoPhreshly",
      "Another Meal Prep Startup",
      "DataLords",
      "ArtBuild",
      "BizBuildr",
      "Groundr",
      "Axcalibur ltd.",
      "Blackridge Finance",
      "Woolshear Accounting",
      "Innorupt Tech",
      "CuttingEdge ",
      "Phat & SaaSy",
      "Worms & Things",
      "LazerCorp",
      "AggroTech",
      "Fizzle AI Inc.",
      "Jones Day ",
      "Lawyer & Sons Bakery",
      "Watts Electric",
      "Pret a Manger",
      "Zed’s Bread",
      "Zed’s Bread Baby: A Bakery for Kids",
      "Oil Magnate",
      "eComms & More",
      "Telecomm Firm",
      "Chipotle",
      "The Beatles"
    ]
    |> Enum.random()
  end

  def job_title() do
    [
      "Chief Luxury Boy",
      "Chief Boss Girl",
      "Influencer",
      "In-house mortician",
      "Software User",
      "Tickler",
      "Product Manager Manager",
      "Junior Mint Analyst",
      "Analyst, Jr.",
      "Senior Citizen",
      "Head Copywriter",
      "HUMAN WORKER",
      "Soy Boy",
      "Art Taster",
      "The Guy",
      "Head Honcho",
      "Big Cheese",
      "Software “Developer” ;)",
      "A Mouse in A Chef’s Hat",
      "Best Boy",
      "Best Girl",
      "Hottest Accountant",
      "Tender CEO",
      "COO",
      "CFO",
      "CEOLMNOP",
      "Curious Watcher",
      "BizDev Bro",
      "Sandal Wearer",
      "Artist",
      "Cinematographer",
      "Pickling Expert",
      "Lead UI (Ugly Imp) Developer",
      "Person Who Invites Everyone to BBQs",
      "Tastiest Crumpet",
      "Office Snack",
      "I Am a Human Chair",
      "HR Manager With A Twist",
      "Intern",
      "Unpaid Intern",
      "Really Incompetent Intern",
      "Bad Manager",
      "Batman",
      "Sort of like a sidekick",
      "Punching Bag",
      "Cool Skateboarder",
      "Hunter/Gatherer",
      "Hostess",
      "Hostess (With the Mostess ahaha hire me)",
      "Avocado Smusher",
      "Bread Toaster",
      "Fry Cook",
      "Tuna Guy",
      "Salmon Filleter",
      "Sturgeon De-scaler",
      "Building Climber",
      "Tree Climber",
      "Shoe Polisher",
      "Draft Dodger",
      "Lemon Taster",
      "Water Cooler Lurker",
      "Bathroom User",
      "Computer Owner",
      "Richard Branson’s Cousin Dave",
      "Business Guru",
      "Thought Leader",
      "Inspirator",
      "Chief Dream-O-Vator",
      "Inspirational Executive",
      "“Cool” Boss",
      "Logistics Wizard",
      "Salesperson",
      "Sales Designer",
      "Sales Guru",
      "Head Chef",
      "Fireman",
      "I’m A Cop",
      "Definitely Not An Undercover Cop",
      "Swimwear Model",
      "Head of Product",
      "Head of Shoulders",
      "Shampoo Latherer",
      "Ginger",
      "Hairy Person",
      "Chest Shaver",
      "Air Conditioning Czar",
      "Pet Dog",
      "Pet Cat",
      "Pet Human",
      "Senior Riddle Solver",
      "Dentist",
      "In-House “Doctor”",
      "Dog Walker",
      "DJ",
      "Best Lil’ Hacker",
      "Mama’s Golden Child",
      "HR Manager",
      "Senior Recruitment Advisor",
      "Distinguished VP of Marketing",
      "CMO",
      "Big Bad Boss Baby",
      "Head Mistress",
      "Dean of Student Conduct",
      "Champion of Excellence",
      "Destroyer of Man",
      "Lord God Almighty",
      "Biggest Boy",
      "The Girl Who Gets Shit Done",
      "Senior Micro Manager",
      "Chief Email Supervisor",
      "Marketing Wizard",
      "Business Expert",
      "Entrepreneur",
      "Bitch, Lover, Child, Mother",
      "Head of Corporate Sin",
      "Senior Account Executive",
      "Account Executive",
      "Business Daddy",
      "Business Mommy",
      "Quarterback",
      "Guy Dressed As Hot Dog",
      "Chief Culinary Officer",
      "Sergeant ",
      "“Doctor”"
    ]
    |> Enum.random()
  end

  def job_description() do
    [
      "Smelled everything to make sure it’s okay",
      "Responded to all questions on Yahoo Answers",
      "Optimized backend workflows",
      "Siloed data",
      "Stole user data for a “personal project”",
      "Traded in an insider fashion",
      "Soup taster",
      "In charge of dicing cheeses for salads",
      "Rubbed CEO’s feet",
      "Hid eggs all over the office",
      "Was in charge of impromptu lice checks",
      "Got coffee, mainly",
      "In charge of refilling the printer and the water cooler and barely mixed them ever and only had to replace the printer twice due to water damage. ",
      "In charge of liking comments on Facebook, and leaving comments on LinkedIn.",
      "Sent sales messages to 100 strangers everyday.",
      "Hoarded hot sauce packets in my top desk drawer",
      "Slithered on floor like a snake",
      "Boosted employee engagement by proposing to every employee",
      "Lubricated our sales funnel",
      "Bedazzled our workflows",
      "Engineered a little slingshot on my desk with paperclips and a rubber band",
      "Put out metaphorical fires",
      "Put out literal fires.",
      "Started a bunch of fires (literal and metaphorical)",
      "I WAS A HUMAN EMPLOYEE HERE AND NOT A ROBOT",
      "Was in charge of fighting competitors",
      "Danced like no one was watching.",
      "Did spreadsheets or something",
      "Analyzed portfolios using my portfolio analysis skillset",
      "Optimized SEO for top 10 business tips near you",
      "Ran our blog",
      "Turned our blog into a personal travel blog",
      "Gained -172 followers on our LinkedIn page once because of that thing I posted about how warehouse employees shouldn’t have… actually nevermind.",
      "Exceeded all sales goals by having my mom buy our stuff.",
      "Generated revenue by stealing co-worker’s wallets.",
      "Optimized blog content to help bloggers optimize their blogs.",
      "Shouted at everyone near me for a few years.",
      "Led all salespeople in winking at coworkers",
      "Helped our business development team develop business through platform-based collaboration",
      "What am I doing with my life? What is this?",
      "How am I supposed to boil down my professional existence and merit to one page?",
      "[for later: make up some bullshit about my cold-calling job]",
      "Definitely didn’t do any illegal stuff here.",
      "Mostly in charge of styling hair, but also did some nail clipping and backrubs.",
      "In charge of correspondence between my boss and my boss’ ex",
      "Did a really sweet kickflip one time",
      "Mostly was really cool and had like, tons of sex and was really popular",
      "Idk why but it seems relevant to include here that i had tons of friends in college",
      "Organized logistics for the supply chain or something",
      "Mostly crumpled up paper and threw it into trash cans while yelling “Kobe” ",
      "Tickled my elders ",
      "Harassed prospects until they paid me to leave them alone",
      "Filled our funnels with all sorts of stuff. Leads, grains, various leafy greens. All sorts of stuff.",
      "Primarily a research role.",
      "Helped subsidize corporate developments through grant writing and proposals.",
      "Delivered mail.",
      "Helped train staff on proper handshake techniques.",
      "Client-facing role in which I interfaced with clients in my role.",
      "Served as creative-lead on multiple projects across our client base.",
      "Standardized and digitized our documents for efficiency purposes.",
      "Started an organic garden in the break room.",
      "Helped generate impressions through a multi-channel marketing bonanza.",
      "Co-led multiple keynote addresses to build brand.",
      "Wrote code in C+, C++, C-, and C+-",
      "Helped automate work process by pretending to learn HTML but actually outsourced it to a Latvian engineer named Juris. Great guy. Wait no—I actually coded ignore that.",
      "Good restaurants near me",
      "Hello? It’s grandma. I lam lerning SMS txt messaging. My friend Gloris’s grandaughter is going to art school. ",
      "Handled stocking, stalking, and sticking (gum to wall).",
      "Primarily handled B2B clients, but also some B2C, F2F, DTF, and GTA V.",
      "Honestly not sure what I did here but they kept paying me.",
      "Mostly solved riddles.",
      "I spent a lot of time locking doors and running away.",
      "Pls hire me",
      "Pretty pls hire me",
      "I would frequently fall asleep on my keyboarhdajjknnnnnnnnnnnnnnnnnn",
      "Mostly handled the animal husbandry elements.",
      "Drew maps of the office and marked my favorite places to cry.",
      "Spreadsheets or something idfk ",
      "Honestly I’m still not sure what this company did but they kept paying me and telling me to ‘keep quiet’",
      "Tasted lemons (sometimes limes).",
      "Quality assurance—checked products to assure quality.",
      "Helped escalate customer service tickets to Chief Escalation Officer who then routes them to reps for further escalation.",
      "Learned HTML, and then re-learned it when I found out that wasn’t an abbreviation for “Hotmail.”",
      "Used SQL to find out whose pictures my ex has been liking on Instagram.",
      "Queried everything.",
      "Wrote bot scripts to help me write more bot scripts",
      "Coded in Python, Boa Constrictor, Black Mamba, Banded Reef Snake, and Viper.",
      "Explored the caverns of Borneo, but upon discovering the golden idol was missing, I learned that friendship was the real treasure all along.",
      "Hucked stuff at cars/passersby",
      "Mostly carved smiley faces into my desk",
      "I accrued so many monitors here it would make your puny head spin.",
      "Traded stocks, bonds, baseball cards, stories of a youth long gone.",
      "Bundled various people’s belongings into an ETF/the trunk of my car.",
      "Something something NFT blockchain",
      "Stood by water cooler trying to talk to people about blockchain."
    ]
    |> Enum.random()
  end

  def company do
    [
      "startup",
      "software Company",
      "fintech Provider",
      "purveyor of tasty treats",
      "business",
      "enterprise",
      "small Business",
      "meal ticket",
      "absolute titan of SaaS",
      "store",
      "shop",
      "operation",
      "place of work",
      "hot Piece of eCommerce",
      "dainty storefront",
      "brick and mortar",
      "eShop",
      "etsy shop",
      "definitely legal basement enterprise ",
      "firm",
      "financial institution ",
      "place of business",
      "trading platform",
      "industry leader",
      "ai-driven platform",
      "platform-driven ai",
      "fancy shoppe",
      "sultry workplace",
      "Shrimp shack",
      "General store",
      "Grocery place",
      "Business factory",
      "Spreadsheet mill",
      "Stock exchange",
      "Coffee shop",
      "Snack palace",
      "Public restroom",
      "Shoe buying place",
      "“Store”",
      "“Legitimate business”",
      "Software slinger",
      "Marketing firm",
      "Consulting firm",
      "Law firm",
      "Mom and pop shop",
      "Mom and pop business",
      "Office",
      " Grout seller",
      "Construction crew",
      "Demolition crew",
      "Business place",
      "Yogurt shop",
      "Ice cream shoppe",
      "Chicken tender optimization consultancy",
      "Agency",
      "Creative agency",
      "AdTech Optimization Firm",
      "FinTech Optimization Consultation Agency",
      "Notary Public"
    ]
    |> Enum.random()
  end

  def verbs do
    [
      "Makes",
      "Manufactures",
      "Inspects",
      "Certifies",
      "Acquires",
      "Merges",
      "Reviews",
      "Reads",
      "Undermines",
      "Sells",
      "Resells",
      "Polishes",
      "Refines",
      "Embezzles",
      "Smuggles",
      "Licks",
      "Tickles",
      "Optimizes",
      "Deoptimizes",
      "Hides",
      "Massages",
      "Auctions Off",
      "Constructs",
      "Develops",
      "Innovates",
      "Disrupts",
      "Super Mega Disrupts",
      "Kicks",
      "Packages",
      "Designs",
      "Models",
      "Plans",
      "Steals",
      "Nicks",
      "Punches",
      "Karate Chops",
      "Yells At",
      "Publishes",
      "Writes About",
      "Blogs About",
      "Draws Pictures of ",
      "Trades",
      "Buys & Sells",
      "Hides From",
      "Laughs At",
      "Cowers Behind",
      "Looks at",
      "Stares at",
      "Runs from",
      "Consults ",
      "Analyzes",
      "Swims in",
      "Collects data on",
      "Aggregates",
      "Packages and resells ",
      "Educates",
      "Teaches consumers about",
      "Consumes",
      "Annoys",
      "Rambles About"
    ]
    |> Enum.random()
  end

  def thing_product() do
    [
      "Widgets",
      "Rubber bouncy balls",
      "Data",
      "Planes",
      "Yogurt",
      "Skittles ",
      "Coins",
      "Cryptocurrency",
      "ETFs",
      "Stocks/Bonds",
      "Bonds… James Bonds.",
      "Certified Pre-Owned Diapers",
      "Vintage Automobiles",
      "Planes",
      "Cheerios",
      "Bread crumbs",
      "Loose change",
      "Loose bread crumbs",
      "Birds ",
      "Animals",
      "Dolphins",
      "Professors",
      "Gasoline",
      "Cold, Hard Cash",
      "Gold",
      "Underwear",
      "Software Solutions",
      "Books",
      "“Books”",
      "Adult Books",
      "Magazines",
      "Adult Magazines",
      "Frozen Yogurt",
      "Unfrozen Yogurt",
      "Beans",
      "Pickle Hot Sauce",
      "Crumbs",
      "Lizards",
      "Spreadsheets",
      "Marketing Plans",
      "Business Plans",
      "Growth Plans",
      "Blogs",
      "Children ",
      "Toddlers",
      "Scurvy",
      "Pirates",
      "Local governments",
      "Podcasts",
      "Deepfake Videos",
      "Buzzwords",
      "Blog Posts",
      "Charts",
      "Medicine",
      "Pharmaceuticals",
      "Pills ",
      "Definitely Not Addictive Pain Pills",
      "Marketing Stuff",
      "AdTech Solutions",
      "Sales Platforms",
      "CRM Platforms",
      "Enterprise Solutions",
      "Churros",
      "Donuts",
      "Beef",
      "Eggs",
      "Eggs (not from Chickens)",
      "Poultry",
      "Fish",
      "Seeds",
      "Rocket Components",
      "3D Printers",
      "Contruction Machines",
      "Telecomm Equipment",
      "Logistic Solution Infrastructure Guidelines",
      "Farms",
      "Farmers",
      "Crops",
      "Pesticides",
      "Rubber stamps",
      "Beepers/Pagers",
      "Academic Institutions",
      "Medical Apparatuses… Apparati? Idk",
      "Please help i am trapped in the ShlinkedIn HQ basement ",
      "Instant noodles",
      "CPG",
      "Consumer packaged goods",
      "Bulk textiles",
      "Bulk cashews",
      "One single almond",
      "The state of california",
      "Processed food goods",
      "Industrial-grade deep sea mining equipment.",
      "Industrial-grade yogurt",
      "Enterprise-grade paprika ",
      "“Medicine”",
      "Chemicals",
      "Food colorants",
      "Artificial ingredients",
      "“Organic” foods",
      "Unions",
      "Movies",
      "Actors",
      "Solar panels",
      "NFTs",
      "Cryptocurrencies",
      "Milling equipment",
      "Record deals",
      "Internet uh things",
      "Lil gizmos and gadgets",
      "Copies of the declaration of independece",
      "Apps (appetizers)",
      "Apps",
      "2-for-1 Entrees at Applebee’s",
      "Jamba juice franchises"
    ]
    |> Enum.random()
  end

  def institution do
    [
      "Hogwarts School of Business",
      "University of Dakota at Miami at Ohio",
      "Liberal Arts School",
      "HARVARD EVER HEARD OF IT?",
      "Waitlisted at numerous Ivy League institutions",
      "PragerU",
      "The Enron School of Business",
      "The Guy Who Talks to Himself Behind That One McDonalds ",
      "Blue Mountain State",
      "Khan Academy",
      "ZipSchool",
      "School of Hard Knocks",
      "Simon Sinek Youtube Videos",
      "Gary Vaynerchuk’s Twitter",
      "Facebook Group University",
      "Not Allowed Near Schools, Actually",
      "Brown University",
      "Wesleyan University",
      "Jamba Academy",
      "The Sorbonne",
      "PCU",
      "Subway™ School of the Sandwich Arts",
      "Eton",
      "The Empty Lot Near Yale",
      "Koch Brothers School of Business",
      "Oracle Sales Vids",
      "Books?",
      "Pamphlets",
      "Magazines From A Pediatrician’s Office",
      "I Learn From The Stars",
      "Just Born Really Smart",
      "LinkedIn Learning",
      "BuildSpace",
      "Bezos School of Space Flight",
      "Branson School of Space Flight",
      "Musk School of Space Flight",
      "A Real University Don’t Worry About It",
      "My older cousin (he’s really smart)",
      "The school from Dead Poet’s Society (but it’s a college I guess)",
      "South Harmon Institute of Technology",
      "The Wind is my Teacher",
      "Astral Planes University",
      "Good School I forget the name though",
      "Colombia ",
      "Barnyard",
      "Wellsleyan",
      "School of Rock",
      "Reading Rainbow Reruns",
      "Schoolhouse Rock Reruns",
      "Podcasts",
      "Joe Rogan"
    ]
    |> Enum.random()
  end

  def major do
    [
      "English",
      "History",
      "Math",
      "Philosophy",
      "Gov",
      "Secret Math",
      "Marketing",
      "Communications",
      "CS",
      "Neuro Science",
      "Biology",
      "Biology ;) ",
      "Doctor Things",
      "Numbers ",
      "Magnets",
      "Partyin’ hahah ZBT for LIFE",
      "Words and things",
      "Dunno was an athlete",
      "Dance",
      "Dance (the weird kind)",
      "“Art”",
      "Visual Arts",
      "Business",
      "Marketing",
      "Beef",
      "Double Business",
      "Double: Business and Getting Down to Business",
      "Soups and Their Nature",
      "Animals",
      "Agricultural Studies",
      "Interpretive Accounting",
      "Creative Business ",
      "Agricultural Philosophy",
      "Tenderizing",
      "Music",
      "DJing",
      "Folding Things",
      "Networking",
      "Handshakes",
      "Eye Contact",
      "Too Much Eye Contact",
      "Conference Calls",
      "Sales",
      "Smelling",
      "Minor",
      "Scales",
      "Lizards",
      "Dentistry",
      "Advanced Intermediate Studies",
      "Animal Husbandry",
      "Animal Dentistry",
      "Textile Unweaving",
      "Weaving",
      "Podcasting",
      "Photography",
      "Soup",
      "Lying Down",
      "Office Politics",
      "Drinking Enough Water Daily",
      "Bugs",
      "Outdoor Education",
      "Philandering",
      "Philosophizing",
      "Making Clothes Out of Blankets",
      "PillowForting",
      "Gurgling",
      "Teeth",
      "Wearing Deoderant",
      "Triple Business",
      "Management",
      "Middle Management",
      "Spreadsheeting",
      "Emailing",
      "Double: Emailing & Crying",
      "Emotional Distress",
      "Personal Dream Abandonment",
      "Followship",
      "Taking Orders",
      "Working Quietly",
      "Desks",
      "Archaeology",
      "Anthropology",
      "Art History",
      "Fart History",
      "Economics",
      "Econ, bro!",
      "Literature… lol jk finance wats up",
      "Molecular Biology",
      "Bolecular Miology",
      "Psychology",
      "Psychiatry",
      "Theater",
      "Drama",
      "Astronomy",
      "Astrology",
      "Film Studiees",
      "Spaghetti",
      "Cole’s Law Studies",
      "Pickling"
    ]
    |> Enum.random()
  end

  def hobbies do
    one = blatantly_self_aggrandizing_charitable_action()
    two = blatantly_self_aggrandizing_charitable_action()
    "#{one}, #{two}"
  end

  def gpa() do
    "#{Enum.random(0..3)}.#{Enum.random(0..9)}"
  end

  def phone_number() do
    number = Enum.map(0..9, fn _ -> Enum.random(0..9) end)
    "#{Enum.slice(number, 0..2)}-#{Enum.slice(number, 3..6)}-#{Enum.slice(number, 6..9)}"
  end

  def reference do
    "#{surprising_aggressor()}"
  end

  def weird_physical_characteristic() do
    [
      "Two hearts",
      "Multiple bypass surgeries ",
      "Heart of gold",
      "No spinal cord ",
      "A love of laughter",
      "Dark secrets ",
      "Despair in my soul ",
      "Bushy eyebrows ",
      "A toothy grin",
      "The sharpest teeth you’ve ever seen",
      "6 toes ",
      "3 eyes ",
      "A snout instead of a nose",
      "Decent posture",
      "Incredible dexterity",
      "Great bedside manner",
      "A slender profile ",
      "Long, long, nails",
      "The haunches of a horse ",
      "The ability to shriek like a goat ",
      "A desire to learn",
      "A pocketful of dreams",
      "A love for drones",
      "A bellyful of soup",
      "A tummy full of hope",
      "A full belly",
      "A hungry heart",
      "A song in my heart",
      "A bad attitude ",
      "A Mysterious past",
      "Gloomy vibes",
      "Very little acumen",
      "many friends",
      "no friends",
      "A half-full can of Fresca",
      "A spoonful of sugar",
      "Terrible bedside manner",
      "A great sense of humor",
      "A terrible sense of humor",
      "Not a lot going for me",
      "Weird ankles",
      "No regard for the law",
      "Gusto",
      "A diverse crypto portfolio",
      "A very poorly performing stock portfolio",
      "Binders full of… nevermind uh",
      "A 2.7 rating on Uber",
      "A bunch of pet birds",
      "A pet snake",
      "A pet goat",
      "A pet spider",
      "A podcast",
      "A blog",
      "A weird vibe",
      "A Rash ",
      "A rash that doctors have described as both ‘persistent’ and ‘very offputting’",
      "A good work ethic",
      "A bad work ethic",
      "A zest for life",
      "A Good beard"
    ]
    |> Enum.random()
    |> String.downcase()
  end

  def job_modifier() do
    [
      "Financial",
      "Software",
      "Consulting ",
      "Culture",
      "Change",
      "Business",
      "Innovation",
      "Content",
      "Engineering",
      "Executive",
      "Honored",
      "Flustered",
      "Concept",
      "Design",
      "Creative",
      "Artistic",
      "Criminal",
      "Crotchety",
      "Very sleepy",
      "Medium-motivated",
      "Decent",
      "Somewhat interesting"
    ]
    |> Enum.random()
  end

  def job_title2() do
    [
      "Engineer",
      "Director",
      "Marketer",
      "Technologist",
      "Entrepreneur",
      "Hustler",
      "Problem Solver",
      "Whisperer",
      "Analyst",
      "Intern",
      "Shark"
    ]
    |> Enum.random()
  end

  def time() do
    ["days", "hours", "minutes", "seconds", "decades", "picoseconds"] |> Enum.random()
  end

  def summary() do
    "#{job_modifier()} #{job_title2()} with #{weird_physical_characteristic()} and #{Enum.random(0..15)} #{time()} of experience. #{hashtags()}"
  end

  def address() do
    random_length = Enum.random(0..3)
    random_numbers = Enum.map(0..random_length, fn _ -> Enum.random(0..9) end) |> Enum.join("")
    "#{random_numbers} #{street()} #{street_modifier()}"
  end
end
